@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "ログイン";
}

<div class="container margin-topbottom">
    <div class="mainbox col-sm-9 col-sm-offset-2">
        <div class="panel panel-info">
            <div class="panel-heading clearfix">
                <div class="panel-title pull-left">ログイン</div>
                <div class="pull-right">
                    <a href="@Url.Action("ForgotPassword")">パスワードを忘れた方</a>
                </div>
            </div>

            <div class="panel-body">
                <div class="row clearfix">
                    <div class="col-sm-8">
                        <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                            @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="col-sm-offset-1 col-sm-10">
                                <div class="input-group form-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    <input asp-for="UserNameOrEmail" class="form-control full-size-area" placeholder="ユーザー名 or メールアドレス" />
                                </div>
                                <span asp-validation-for="UserNameOrEmail" class="text-danger"></span>


                                <div class="input-group form-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control full-size-area", @placeholder = "パスワード" })
                                </div>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })


                                <div class="form-group">
                                    <div class="col-sm-offset-1">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.RememberMe)
                                            @Html.LabelFor(m => m.RememberMe)
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-8">
                                        <input type="submit" value="ログイン" class="btn btn-primary" />
                                        <a asp-action="Register" class="btn btn-success">新規登録</a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>

                    <div class="col-md-4">
                        <section id="socialLoginForm">
                            <h4>外部サービス</h4>
                            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                                <div>
                                    <p>
                                        @{
                                            var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
                                            @foreach (var provider in loginProviders)
                                            {
                                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                                            }
                                        }
                                    </p>
                                </div>
                            </form>
                        </section>
                    </div>
                </div>


            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}